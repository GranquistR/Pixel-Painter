# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Publish Web Application

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    # Setup Node.js for npm install
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x' # Use the Node.js version compatible with your project

    - name: Install npm dependencies
      working-directory: ./mytestvueapp.client
      run: npm install --legacy-peer-deps

    - name: Create directory for HTTPS certificate
      run: mkdir -p ~/.aspnet/https

    # Build and publish dotnet
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore
      
    - name: Publish
      run: dotnet publish -c Release -o ./publish
      
    - name: Archive published files
      uses: actions/upload-artifact@v3
      with:
        name: published-app
        path: ./publish

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download published files
        uses: actions/download-artifact@v3
        with:
          name: published-app

      - name: Set up SSH agent with Server
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          
      - name: Transfer artifact to the remote server
        run: scp -o StrictHostKeyChecking=no -r /home/runner/work/Pixel-Painter/Pixel-Painter/* ${{ secrets.USER }}@${{ secrets.HOST }}:/var/www/app/

      - name: Run the dotnet app
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            PID=$(pgrep -fx 'dotnet /var/www/app/MyTestVueApp.Server.dll')
            if [ -n "$PID" ]; then
              kill $PID           
            fi
            nohup dotnet /var/www/app/MyTestVueApp.Server.dll > dotnet_logs_$(date +\"%Y-%m-%d_%H-%M-%S\").log 2>&1 &
     
